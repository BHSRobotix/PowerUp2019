// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2876.PowerUp2018.commands;
import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

import org.usfirst.frc2876.PowerUp2018.Robot;
import org.usfirst.frc2876.PowerUp2018.RobotMap;

/**
 *
 */
public class ElevatorPosition extends Command {

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

	private double m_position;

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
	public ElevatorPosition(double position) {

		// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
		m_position = position;
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

		// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
		requires(Robot.elevator);
		// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	}



	// Called just before this Command runs the first time
	@Override
	protected void initialize() {
		//double pos = SmartDashboard.getNumber(RobotMap.SD_KEY_ELEVATOR_POSITION_SETPOINT, m_position);

		//Robot.elevator.setLastPosition(pos);
	}

	// Called repeatedly when this Command is scheduled to run
	@Override
	protected void execute() {
//		if (Robot.elevator.isBottom()) {
//			if (Robot.elevator.getPosition() != RobotMap.ELEVATOR_POSITION_ACQUIRE_CUBE) {
//				Robot.elevator.setPosition(RobotMap.ELEVATOR_POSITION_ACQUIRE_CUBE);
//			}
//		}
//		if (Robot.elevator.getCurrentPosition() != Robot.elevator.getLastPosition()) {
//			Robot.elevator.setPosition(Robot.elevator.getLastPosition());
//		}
	}

	// Make this return true when this Command no longer needs to run execute()
	@Override
	protected boolean isFinished() {
		return false;
	}

	// Called once after isFinished returns true
	@Override
	protected void end() {
	}

	// Called when another command which requires one or more of the same
	// subsystems is scheduled to run
	@Override
	protected void interrupted() {
		end();
	}
}
